import numpy as np
from scipy.io.wavfile import write
import random

# Parameters
sample_rate = 44100  # Standard audio sample rate
max_duration = 0.06   # Maximum duration for each bleep/bloop (in seconds)
bleep_frequency_range = (2000, 6000)  # Range for bleep frequency (in Hz)
bloop_frequency_range = (75, 600)   # Range for bloop frequency (in Hz)

def generate_bleep(duration):
    """Generates a bleep sound using a square wave."""
    frequency = random.randint(bleep_frequency_range[0], bleep_frequency_range[1])
    t = np.linspace(0, duration, int(sample_rate * duration), endpoint=False)
    bleep_wave = np.sign(np.sin(2 * np.pi * frequency * t))  # Square wave (sharp, bleepy sound)
    bleep_wave = np.int16(bleep_wave * 32767)  # Scale to 16-bit PCM
    return bleep_wave

def generate_bloop(duration):
    """Generates a bloop sound using a sine wave."""
    frequency = random.randint(bloop_frequency_range[0], bloop_frequency_range[1])
    t = np.linspace(0, duration, int(sample_rate * duration), endpoint=False)
    bloop_wave = np.sin(2 * np.pi * frequency * t)  # Sine wave (smoother, bloopy sound)
    bloop_wave = np.int16(bloop_wave * 32767)  # Scale to 16-bit PCM
    return bloop_wave

def generate_random_bleeps_and_bloops(num_sounds, filename):
    """Generates a series of random bleeps and bloops and saves them to a WAV file."""
    all_sounds = []
    for _ in range(num_sounds):
        # Randomly choose between a bleep or a bloop
        sound_type = random.choice(['bleep', 'bloop'])
        duration = random.uniform(0.1, max_duration)  # Random duration between 0.1s and max_duration
        
        if sound_type == 'bleep':
            sound = generate_bleep(duration)
        else:
            sound = generate_bloop(duration)
        
        all_sounds.append(sound)
    
    # Combine all sounds into one array
    final_audio = np.concatenate(all_sounds)
    
    # Write to WAV file
    write(filename, sample_rate, final_audio)
    print(f"Random bleeps and bloops saved to {filename}")

# Example usage
generate_random_bleeps_and_bloops(100, 'random_bleeps_bloops.wav')